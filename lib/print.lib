#!/bin/bash
##############
#+ VERSION::1.301.0
#- VERIFY::_Print_
declare -r _Print_="TacoTuesday"




#################################################
# <definition::print.lib>
#   This library creates print functions with the
#+    use of printf. Most functions are formatted
#+    and do not accept escape characters. A few
#+    are intended to allow for interpretation
#+    of escape characters in the input passed
#+    by the caller. Functions that interpret
#+    esacpe characters are suffixed with the
#+    letter 'F'.
# </definition>
#################################################




#################################################
# <function::genPrint>
#   generic print function
#   replaces echo "$@"
#   ARG@ -> string to print
# </function>
#################################################
genPrint() { printf "%s\n" "$@"; }




#################################################
# <function::tabPrint>
#   generic print function with
#+    tab indent.
#   replaces echo -e "\t$@\n"
#   ARG@ -> string to print
# </function>
#################################################
tabPrint() { printf "\t%s\n" "$@"; }




#################################################
# <function::genPrintF>
#   generic print function which accepts escape 
#+    characters but does not guarantee string
#+    format.
#   ARG@ -> string to print
#   replaces printf "$@"
# </function>
#################################################
genPrintF() { printf "$@"; }




#################################################
# <function::colPrint>
#   generic print function for printing in color
#   ARG1 -> color of string to be printed
#   ARG@ -> string to be printed
#+    parameters are shifted after $1 is set
# </function>
#################################################
colPrint() {
    local clr="$1"
    shift
    local msg="$@"
    local def_fnt="\e[39m"

    printf "%b%s%b\n" "$clr" "$msg" "$def_fnt"
}




#################################################
# <function::colPrintF>
#   generic print function for printing in color
#   ARG1 -> color of string to be printed
#   ARG@ -> string to be printed (will interpret
#+    esacpe characters) with no new line
#+    parameters are shifted after $1 is set
# </function>
#################################################
colPrintF() {
    local clr="$1"
    shift
    local msg="$@"
    local def_fnt="\e[39m"

    printf "%b${msg}%b" "$clr" "$msg" "$def_fnt"
}
